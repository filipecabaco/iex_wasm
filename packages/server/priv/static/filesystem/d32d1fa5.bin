;; generated automatically.  DO NOT EDIT
#!no-fold-case
(define-module data.sparse (use gauche.collection) (use gauche.dictionary) (export <sparse-table> make-sparse-table sparse-table-num-entries sparse-table-ref sparse-table-set! sparse-table-exists? sparse-table-clear! sparse-table-delete! sparse-table-copy sparse-table-update! sparse-table-push! sparse-table-pop! sparse-table-fold sparse-table-map sparse-table-for-each sparse-table-find sparse-table-keys sparse-table-values sparse-table-comparator %sparse-table-dump %sparse-table-check <sparse-vector-base> <sparse-vector> <sparse-s8vector> <sparse-u8vector> <sparse-s16vector> <sparse-u16vector> <sparse-s32vector> <sparse-u32vector> <sparse-s64vector> <sparse-u64vector> <sparse-f16vector> <sparse-f32vector> <sparse-f64vector> sparse-vector-max-index-bits make-sparse-vector sparse-vector-num-entries sparse-vector-ref sparse-vector-set! sparse-vector-exists? sparse-vector-clear! sparse-vector-delete! sparse-vector-copy sparse-vector-update! sparse-vector-inc! sparse-vector-push! sparse-vector-pop! sparse-vector-fold sparse-vector-map sparse-vector-for-each sparse-vector-find sparse-vector-keys sparse-vector-values %sparse-vector-dump <sparse-matrix-base> <sparse-matrix> <sparse-s8matrix> <sparse-u8matrix> <sparse-s16matrix> <sparse-u16matrix> <sparse-s32matrix> <sparse-u32matrix> <sparse-s64matrix> <sparse-u64matrix> <sparse-f16matrix> <sparse-f32matrix> <sparse-f64matrix> make-sparse-matrix sparse-matrix-num-entries sparse-matrix-ref sparse-matrix-set! sparse-matrix-exists? sparse-matrix-clear! sparse-matrix-delete! sparse-matrix-copy sparse-matrix-update! sparse-matrix-inc! sparse-matrix-push! sparse-matrix-pop! sparse-matrix-fold sparse-matrix-map sparse-matrix-for-each sparse-matrix-keys sparse-matrix-values))
(select-module data.sparse)
(dynamic-load "data--sparse")
