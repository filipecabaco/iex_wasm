;; generated automatically.  DO NOT EDIT
#!no-fold-case
(define-module binary.io (export read-uint read-u8 read-u16 read-u32 read-u64 read-sint read-s8 read-s16 read-s32 read-s64 read-ber-integer read-f16 read-f32 read-f64 write-uint write-u8 write-u16 write-u32 write-u64 write-sint write-s8 write-s16 write-s32 write-s64 write-ber-integer write-f16 write-f32 write-f64 get-uint get-sint get-u8 get-u16 get-u32 get-u64 get-s8 get-s16 get-s32 get-s64 get-f16 get-f32 get-f64 get-u16be get-u16le get-u32be get-u32le get-u64be get-u64le get-s16be get-s16le get-s32be get-s32le get-s64be get-s64le get-f16be get-f16le get-f32be get-f32le get-f64be get-f64le put-uint! put-sint! put-u8! put-u16! put-u32! put-u64! put-s8! put-s16! put-s32! put-s64! put-f16! put-f32! put-f64! put-u16be! put-u16le! put-u32be! put-u32le! put-u64be! put-u64le! put-s16be! put-s16le! put-s32be! put-s32le! put-s64be! put-s64le! put-f16be! put-f16le! put-f32be! put-f32le! put-f64be! put-f64le! read-binary-uint read-binary-uint8 read-binary-uint16 read-binary-uint32 read-binary-uint64 read-binary-sint read-binary-sint8 read-binary-sint16 read-binary-sint32 read-binary-sint64 read-binary-short read-binary-ushort read-binary-long read-binary-ulong read-binary-float read-binary-double write-binary-uint write-binary-uint8 write-binary-uint16 write-binary-uint32 write-binary-uint64 write-binary-sint write-binary-sint8 write-binary-sint16 write-binary-sint32 write-binary-sint64 write-binary-short write-binary-ushort write-binary-long write-binary-ulong write-binary-float write-binary-double))
(select-module binary.io)
(dynamic-load "binary--io")
