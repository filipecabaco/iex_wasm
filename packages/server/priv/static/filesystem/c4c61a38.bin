;; generated automatically.  DO NOT EDIT
#!no-fold-case
(define-module sxml.sxpath (use scheme.list) (use srfi-11) (use srfi-13) (use text.parse) (use sxml.adaptor) (export sxpath nodeset? as-nodeset sxml:element? ntype-names?? ntype?? ntype-namespace-id?? sxml:invert node-eq? node-equal? node-pos sxml:filter take-until take-after map-union node-reverse node-trace select-kids node-self node-join node-reduce node-or node-closure if-sxpath if-car-sxpath car-sxpath sxml:id-alist sxml:string sxml:boolean sxml:number sxml:string-value sxml:node? sxml:attr-list sxml:id sxml:equality-cmp sxml:equal? sxml:not-equal? sxml:relational-cmp sxml:attribute sxml:child sxml:parent sxml:ancestor sxml:ancestor-or-self sxml:descendant sxml:descendant-or-self sxml:following sxml:following-sibling sxml:namespace sxml:preceding sxml:preceding-sibling sxml:child-nodes sxml:child-elements))
(select-module sxml.sxpath)
(dynamic-load "sxml--sxpath")
